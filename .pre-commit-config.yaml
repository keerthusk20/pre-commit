---
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
        name: Ensure files end with a newline
      - id: check-yaml
      - id: debug-statements
      - id: double-quote-string-fixer
        name: Enforce double quotes for strings
      - id: name-tests-test
      - id: requirements-txt-fixer
      - id: check-docstring-first
      - id: check-added-large-files
        args: ['--maxkb=20000']
      - id: check-docstring-first
      - id: check-json
      - id: detect-private-key
      - id: sort-simple-yaml
        stages: [commit]

  - repo: https://github.com/asottile/setup-cfg-fmt
    rev: v2.8.0
    hooks:
      - id: setup-cfg-fmt
        stages: [commit]

  - repo: https://github.com/asottile/reorder-python-imports
    rev: v3.14.0
    hooks:
      - id: reorder-python-imports
        args: [--py39-plus, --add-import, 'from __future__ import annotations']
        stages: [commit]

  - repo: https://github.com/asottile/add-trailing-comma
    rev: v3.1.0
    hooks:
      - id: add-trailing-comma
        stages: [commit]

  - repo: https://github.com/asottile/pyupgrade
    rev: v3.19.1
    hooks:
      - id: pyupgrade
        args: [--py39-plus]
        stages: [commit]

  - repo: https://github.com/hhatto/autopep8
    rev: v2.3.2
    hooks:
      - id: autopep8
        stages: [commit]

  - repo: https://github.com/PyCQA/flake8
    rev: 7.2.0
    hooks:
      - id: flake8
        stages: [commit]
        pass_filenames: false  # Only one pass_filenames line

  - repo: https://github.com/psf/black
    rev: 25.1.0
    hooks:
      - id: black
        stages: [commit]
        pass_filenames: true
        # Add this line to prevent failure on file modifications
        always_run: true

  - repo: https://github.com/golangci/golangci-lint
    rev: v2.1.2
    hooks:
      - id: golangci-lint
        name: Go linter
        files: \.go$
        types: [file]
        stages: [commit]

  - repo: https://github.com/bridgecrewio/checkov
    rev: 3.2.406  # Use the latest version
    hooks:
      - id: checkov
        name: Checkov Security Scanner
        entry: checkov -d .
        language: python
        pass_filenames: false
        stages: [commit]

  - repo: https://github.com/eslint/eslint.git
    rev: v9.24.0  # instead of a v9 tag
    hooks:
      - id: eslint
        args: ['.']
        pass_filenames: true
        stages: [commit]

  - repo: local
    hooks:
      - id: custom-python-linter
        name: Custom Python Linter
        entry: ./custom_linter.py
        language: system
        types: [python]
        description: Runs a custom Python linter to enforce coding standards.
        stages: [commit]


      - id: check-large-files
        name: Check for Large Files
        entry: check_large_files.sh
        language: script
        types: [file]
        description: Prevents committing files larger than 1MB.
        stages: [commit]

      - id: golang-setup
        name: Go Environment Setup
        language: system
        entry: go version
        files: \.go$
        stages: [commit]

      # HTML Linting
      - id: htmlhint
        name: HTMLHint
        entry: htmlhint
        language: system
        types: [text]
        files: \.html$
        stages: [commit]

      - id: stylelint
        name: Stylelint for CSS
        entry: stylelint "**/*.css"
        language: node
        pass_filenames: false
        files: \.css$
        stages: [commit]

      # Java Linting using Checkstyle
      - id: checkstyle-java
        name: Checkstyle for Java
        entry: checkstyle -c /google_checks.xml
        language: system
        types: [java]
        files: \.java$
        stages: [commit]

      # YAML Linting
      - id: yamllint
        name: YAML Linter (yamllint)
        entry: yamllint
        language: system
        files: \.ya?ml$
        stages: [commit]

      # C Language Linting using cpplint
      - id: cpplint-c
        name: cpplint for C
        entry: cpplint
        language: python
        types: [c]
        files: \.(c|h)$
        stages: [commit]

  - repo: local
    hooks:
      - id: custom-autocorrect
        name: Custom AutoCorrect
        entry: ./autocorrect.sh
        language: script
        pass_filenames: true
        always_run: true
        types: [file]
        verbose: true
        require_serial: true
        stages: [commit]
        args: []
        exclude: ''
